set build_components {
	drivers/gpu/intel
	lib/mesa/swrast
	lib/mesa/i965
	lib/vfs/lxip
	app/ioq3
}

set app_config {
	<start name="ipxe_nic_drv">
		<resource name="RAM" quantum="10M" />
		<provides><service name="Nic" /></provides>
		<route>
			<service name="Platform"> <child name="drivers" /> </service>
			<any-service> <parent /> <any-child/> </any-service>
		</route>
	</start>
	<start name="intel_gpu_drv" caps="500">
		<resource name="RAM" quantum="40M"/>
		<provides> <service name="Gpu"/> </provides>
		<config fb_size="64M"/>
		<route>
			<service name="Platform"> <child name="drivers" /> </service>
			<any-service> <parent /> <any-child/> </any-service>
		</route>
	</start>

	<start name="ioq3" caps="1000">
		<resource name="RAM" quantum="2G"/>
		<config ld_verbose="true">
			<arg value="ioq3"/>
			<libc stdout="/dev/log" stderr="/dev/log" socket="/socket"/>
			<vfs>
				<dir name="dev"> <log/> </dir>
				<dir name="foobar">
					<tar name="ioq3_assets.tar"/>
					<ram/>
				</dir>
				<dir name="socket">
					<lxip ip_addr="127.0.0.1" netmask="255.0.0.0" gateway="0.0.0.0"/> </dir>
				<ram/>
			</vfs>
		</config>
		<route>
			<service name="Nitpicker"> <child name="wm"/> </service>
			<service name="ROM" label="egl_drv.lib.so"> <parent label="egl_i965.lib.so"/> </service>
			<any-service> <parent /> <any-child/> </any-service>
		</route>
	</start>}

if {![file exists bin/ioq3_assets.tar]} {
	puts ""
	puts "Place the 'ioq3_assets.tar' archive in './bin' and run this script again."
	puts ""
	exit 1
}

#
# Boot modules
#

# generic modules
append boot_modules {
	libc.lib.so vfs.lib.so libm.lib.so
	sdl.lib.so
	vfs_lxip.lib.so lxip.lib.so

	intel_gpu_drv
	ipxe_nic_drv

	egl.lib.so mesa.lib.so stdcxx.lib.so
	expat.lib.so glapi.lib.so egl_swrast.lib.so egl_i965.lib.so
	drm.lib.so

	ioq3_assets.tar ioq3
}

source ${genode_dir}/repos/world/run/nitpicker_app.inc
