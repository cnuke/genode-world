
set     depot_archives { }
lappend depot_archives [depot_user]/src/[base_src]
lappend depot_archives [depot_user]/src/glib
lappend depot_archives [depot_user]/src/init
lappend depot_archives [depot_user]/src/libc
lappend depot_archives [depot_user]/src/libiconv
lappend depot_archives [depot_user]/src/nic_router
lappend depot_archives [depot_user]/src/posix
lappend depot_archives [depot_user]/src/report_rom
lappend depot_archives [depot_user]/src/usb_modem_drv
lappend depot_archives [depot_user]/src/vfs
lappend depot_archives [depot_user]/src/vfs_pipe
lappend depot_archives [depot_user]/src/ffi
lappend depot_archives [depot_user]/src/zlib

if {[have_board imx8q_evk] } {
	lappend depot_archives [depot_user]/src/imx8mq_platform_drv
	lappend depot_archives [depot_user]/src/imx8mq_usb_host_drv
	lappend depot_archives [depot_user]/raw/imx8q_evk-devices
	set platform_drv_binary imx8mq_platform_drv
	set usb_host_drv_binary imx8mq_usb_host_drv
}

if {[have_board imx6q_sabrelite]} {
	lappend depot_archives [depot_user]/src/imx6q_platform_drv
	lappend depot_archives [depot_user]/src/legacy_usb_host_drv
	lappend depot_archives [depot_user]/raw/imx6q_sabrelite-devices
	set platform_drv_binary platform_drv
	set usb_host_drv_binary legacy_imx6q_sabrelite_usb_host_drv
}

if {[have_board rpi]} {
	lappend depot_archives [depot_user]/src/rpi_platform_drv
	lappend depot_archives [depot_user]/src/legacy_usb_host_drv
	lappend depot_archives [depot_user]/raw/rpi-devices
	set platform_drv_binary rpi_platform_drv
	set usb_host_drv_binary rpi_usb_host_drv
}

if {[have_board pc]} {
	lappend depot_archives [depot_user]/src/pc_platform_drv
	lappend depot_archives [depot_user]/src/pc_usb_host_drv
	lappend depot_archives [depot_user]/raw/pbxa9-devices
	set platform_drv_binary pc_platform_drv
	set usb_host_drv_binary pc_usb_host_drv
}

set     build_components { }
lappend build_components app/mbimcli
lappend build_components app/ping

set     boot_modules { }
lappend boot_modules libmbim.lib.so
lappend boot_modules mbimcli
lappend boot_modules ping

proc usb_policy { } {
	return {<policy label="usb_modem_drv -> " vendor_id="0x12d1" product_id="0x15c1"/>}
}

proc platform_usb_devices { } {
	if {[have_spec x86]} {
		return {<pci class="USB"/>}
	}
	if {[have_board rpi]} {
		return {<device name="dwc_otg"/>}
	}
	if {[have_board imx8q_evk]} {
		return {<device name="usb_host_2"/>}
	}
	if {[have_board imx6q_sabrelite]} {
		return {<device name="mxs_phy"/> <device name="usbmisc_imx"/> <device name="imx_usb"/>}
	}
}

create_boot_directory

build $build_components

import_from_depot $depot_archives

append config {
<config>
	<parent-provides>
		<service name="CPU"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="IRQ"/>
		<service name="LOG"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="ROM"/>
	</parent-provides>
	<default caps="200"/>

	<start name="timer">
		<resource name="RAM" quantum="2M"/>
		<provides> <service name="Timer"/> </provides>
		<route>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="report_rom">
		<resource name="RAM" quantum="2M"/>
		<provides>
			<service name="Report"/>
			<service name="ROM"/>
		</provides>
		<config verbose="no">
			<policy label="nic_router -> config" report="mbimcli -> nic_router.config"/>
		</config>
		<route>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="platform_drv" caps="800" managing_system="yes">
		<binary name="}
append config $platform_drv_binary
append config {"/>
		<resource name="RAM" quantum="8M"/>
		<provides>
			<service name="Platform"/>
			<service name="Regulator"/>
		</provides>
		<config>
			<policy label="usb_drv -> " info="yes">}
append config [platform_usb_devices]
append config {
			</policy>
		</config>
		<route>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="usb_drv" caps="180">
		<binary name="}
append config $usb_host_drv_binary
append config {"/>
		<resource name="RAM" quantum="64M"/>
		<provides> <service name="Usb"/> </provides>
		<config bios_handoff="yes">
			<report devices="no"/>
			}
append config [usb_policy]
append config {
		</config>
		<route>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="usb_modem_drv">
		<resource name="RAM" quantum="16M"/>
		<provides>
			<service name="Terminal"/>
		</provides>
		<config mac="02:00:00:00:01:01"/>
		<route>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="nic_router" caps="500">
		<resource name="RAM" quantum="16M"/>
		<provides>
			<service name="Nic"/>
			<service name="Uplink"/>
		</provides>
		<route>
			<service name="ROM" label="config"> <child name="report_rom"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="mbimcli" caps="500">
		<resource name="RAM" quantum="32M"/>
		<config ld_verbose="false">
			<network apn="internet.eplus.de" user="eplus" password="eplus" pin="XXXX"/>
			<vfs>
				<dir name="dev">
					<log/>
					<inline name="rtc">2020-08-05 00:01</inline>
					<dir name="pipe"> <pipe/> </dir>
					<terminal name="cdc-wdm0" raw="yes"/>
				</dir>
				<ram/>
			</vfs>
			<libc stdout="/dev/log" stderr="/dev/log" rtc="/dev/rtc" pipe="/dev/pipe"/>
		</config>
		<route>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="ping">
		<resource name="RAM" quantum="8M"/>
		<config period_sec="1"
		        verbose="no"
		        count="5"
		        dst_ip="94.130.141.202" />
		<route>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

</config>
}

install_config $config

build_boot_image $boot_modules

if {[have_include "power_on/qemu"]} {
	set USB_PORT 0
	if [catch { set USB_PORT $env(USB_PORT)}] {
		puts "No 'USB_PORT=<port>' environment variable set"
		exit 0
	}
	puts "Using USB_PORT=$USB_PORT"

	append qemu_args " -nographic  "
	append qemu_args " -usb -device nec-usb-xhci,id=xhci "
	append qemu_args " -device usb-host,hostbus=1,hostaddr=$USB_PORT,bus=xhci.0 "
}

if {[expr ![get_cmd_switch --autopilot]]} {
	run_genode_until forever
} else {
	run_genode_until {child "ping" exited with exit value 0} 60
}
